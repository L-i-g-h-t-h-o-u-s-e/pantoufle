.make-page(@margin-top: @page-margin-top,
           @margin-outside: @page-margin-outside,
           @margin-bottom: @page-margin-bottom,
           @margin-inside: @page-margin-inside,
           @width: @page-width,
           @height: @page-height,
           @sheet-width: @sheet-width,
           @sheet-height: @sheet-height,
           @interface-padding: @interface-padding) {

  @inner-width: calc(100% ~"-" @margin-outside + @margin-inside);
  @inner-height: calc(100% ~"-" @margin-top + @margin-bottom);
  @inner-width-mm: @width - @margin-outside - @margin-inside;
  & when (@height = auto) {
    @inner-height-mm: auto;
  }
  & when not (@height = auto) {
    @inner-height-mm: @height - @margin-top - @margin-bottom;
  }

  position: relative;
  float:left;
  width: @width;
  height: @height;
  overflow: hidden;

  .content {
    position: static !important;
    overflow: hidden;
    width: @inner-width;
    height: @inner-height;
  }

  @media screen {

    margin-top: @interface-padding;
    background-color: #fff;

    // First page
    &:first-of-type
    {
      margin-right: @interface-padding!important;

      & when (@width >= @sheet-width) {
        margin-left: @interface-padding!important;
      }

      & when (@width < @sheet-width) {
        margin-left: @width + @interface-padding!important;
      }

    }

    // Last page
    &:last-of-type {
      margin-bottom: @interface-padding;
    }

    // U.I. Helper
    & {
      box-shadow: 2px 2px 0px 1px #000, 0px 0px 0px 1px #000;
    }

    &::before {
      content: '';
      display: block;
      position: absolute;
      z-index: 2;
      top: @margin-top;
      bottom: @margin-bottom;
      border: 1px solid;
      border-color: rgb(96,198,0) rgb(115,138,94);
      pointer-events: none;
    }

    & when (@width >= @sheet-width) {

      margin-right: @interface-padding;
      margin-left: @interface-padding;

    }

    & when (@width < @sheet-width) {

      // even page
      &:nth-of-type(even)
      {
        margin-left: @interface-padding;
      }

      // odd page
      &:nth-of-type(odd)
      {
        margin-right: @interface-padding;
      }

    }


  }

};


.make-page-margin(@margin-top: @page-margin-top,
           @margin-outside: @page-margin-outside,
           @margin-bottom: @page-margin-bottom,
           @margin-inside: @page-margin-inside,
           @width: @page-width,
           @height: @page-height,
           @sheet-width: @sheet-width,
           @sheet-height: @sheet-height) {

  @inner-width: calc(100% ~"-" @margin-outside + @margin-inside);
  @inner-height: calc(100% ~"-" @margin-top + @margin-bottom);
  @inner-width-mm: @width - @margin-outside - @margin-inside;
  & when (@height = auto) {
    @inner-height-mm: auto;
  }
  & when not (@height = auto) {
    @inner-height-mm: @height - @margin-top - @margin-bottom;
  }

  .content {
    margin-top: @margin-top;
    margin-bottom: @margin-bottom;
  }

  // About margin for odd and even pages.

  & when (@width >= @sheet-width) {
    .content {
      margin-left: @margin-inside;
      margin-right: @margin-outside;
    }
  }

  & when (@width < @sheet-width) {
    // odd page
    &:nth-of-type(odd)
    {
      .content {
        margin-left: @margin-inside;
        margin-right: @margin-outside;
      }
    }
    // even page
    &:nth-of-type(even)
    {
      .content {
        margin-left: @margin-outside;
        margin-right: @margin-inside;
      }
    }

  }


  @media screen {

    & when (@width >= @sheet-width) {

      // U.I. Helper
      &::before {
        left: @margin-outside;
        right: @margin-inside;
      }

    }

    & when (@width < @sheet-width) {

      // U.I. Helper
      &:nth-of-type(odd)::before {
        left: @margin-inside;
        right: @margin-outside;
      }
      &:nth-of-type(even)::before {
        left: @margin-outside;
        right: @margin-inside;
      }

    }


  }

};
